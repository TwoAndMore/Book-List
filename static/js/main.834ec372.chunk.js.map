{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","utils/fetchClient.ts","enums/CategoriesType.ts","components/Loader/Loader.tsx","pages/Dashboard/Dashboard.tsx","api/books.ts","components/TextField/TextField.tsx","pages/AddABook/AddABook.tsx","App.tsx","index.tsx"],"names":["PageNavLink","props","to","text","className","isActive","classNames","NavBar","BASE_URL","request","url","method","data","options","body","JSON","stringify","headers","fetch","then","response","ok","Error","json","CategoriesType","client","Loader","data-cy","Dashboard","books","isBooksLoading","setBooks","handleDeleteBook","bookId","deleteBook","prev","filter","book","id","length","map","title","author","category","isbn","type","onClick","TextField","value","label","required","onChange","useState","Math","random","toString","slice","touched","setTouched","hasError","htmlFor","placeholder","event","target","onBlur","AddABook","setTitle","setAuthor","Classics","setCategory","ISBN","setISBN","isSubmitted","setIsSubmitted","navigate","useNavigate","useParams","bookID","isEditing","handleUpdateBook","newTitle","newAuthor","newCategory","newISBN","updateBook","oldBook","finally","handleCreateBook","a","preventDefault","optimisticResponseId","optimisticBook","createdBook","useEffect","foundBook","find","onSubmit","setTimeout","res","Horror","DAM","Fantasy","disabled","trim","App","isLoading","setIsLoading","path","element","replace","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.834ec372.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = (props) => {\n  const { to, text } = props;\n\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar__item',\n        {\n          'navbar__item--active': isActive,\n        },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import './NavBar.scss';\nimport React from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav className=\"navbar page__section\">\n      <ul className=\"navbar__list\">\n        <PageNavLink to=\"/\" text=\"DashBoard\" />\n        <PageNavLink to=\"/addABook\" text=\"Add a Book\" />\n      </ul>\n    </nav>\n  );\n};\n","const BASE_URL = 'http://localhost:5000';\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return fetch(BASE_URL + url, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum CategoriesType {\n  Horror = 'Horror',\n  DAM = 'Detective and Mystery',\n  Fantasy = 'Fantasy',\n  Classics = 'Classics',\n}\n","import './Loader.scss';\nimport React from 'react';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import './Dashboard.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Book } from '../../types/Book';\nimport { deleteBook } from '../../api/books';\nimport { Loader } from '../../components/Loader/Loader';\n\ntype Props = {\n  books: Book[],\n  setBooks: CallableFunction,\n  isBooksLoading: boolean,\n};\n\nexport const Dashboard: React.FC<Props> = (props) => {\n  const {\n    books,\n    isBooksLoading,\n    setBooks,\n  } = props;\n\n  const handleDeleteBook = (bookId: number): void => {\n    deleteBook(bookId)\n      .then(() => {\n        setBooks((prev: Book[]) => prev.filter(book => book.id !== bookId));\n      });\n  };\n\n  return (\n    <section className=\"page__section dashboard\">\n      {isBooksLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {books.length <= 0 ? (\n            <p>There is no books on the server/ Server Error</p>\n          ) : (\n            <table className=\"dashboard__table\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Author</th>\n                  <th>Category</th>\n                  <th>ISBN</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {books.map(book => (\n                  <tr key={book.id}>\n                    <td>{book.title}</td>\n                    <td>{book.author}</td>\n                    <td>{book.category}</td>\n                    <td>{book.isbn}</td>\n                    <td>\n                      <Link\n                        to={`/addABook/${book.id}`}\n                        className=\"dashboard__link\"\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"dashboard__button\"\n                        >\n                          Edit\n                        </button>\n                      </Link>\n\n                      <button\n                        type=\"button\"\n                        className=\"dashboard__button dashboard__button--red\"\n                        onClick={() => handleDeleteBook(book.id)}\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { Book } from '../types/Book';\n\nexport const getBooks = () => {\n  return client.get<Book[]>('/books');\n};\n\nexport const createBook = (data: {}) => {\n  return client.post('/books', data);\n};\n\nexport const deleteBook = (bookId: number) => {\n  return client.delete(`/books/${bookId}`);\n};\n\nexport const updateBook = (bookId: number, data: {}) => {\n  return client.patch(`/books/${bookId}`, data);\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  value: string,\n  label: string,\n  required: boolean,\n  type: string,\n  onChange: (newValue: string) => void,\n};\n\nconst getRandomDigits = () => Math.random().toString().slice(2);\n\nexport const TextField: React.FC<Props> = (props) => {\n  const {\n    value,\n    label,\n    type,\n    required = false,\n    onChange = () => {\n    },\n  } = props;\n\n  const [id] = useState(() => `${label}${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"addBook__field\">\n      <label className=\"addBook__label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <input\n        id={id}\n        className={classNames('addBook__input', {\n          'addBook__input--empty': hasError,\n        })}\n        type={type}\n        placeholder={`Enter ${label}`}\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        onBlur={() => setTouched(true)}\n      />\n\n      {hasError && (\n        <p className=\"addBook__error\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import './AddABook.scss';\nimport React, { FormEvent, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { TextField } from '../../components/TextField/TextField';\nimport { CategoriesType } from '../../enums/CategoriesType';\nimport { Book } from '../../types/Book';\nimport { createBook, updateBook } from '../../api/books';\n\ntype Props = {\n  books: Book[],\n  setBooks: CallableFunction,\n};\n\nexport const AddABook: React.FC<Props> = (props) => {\n  const {\n    books,\n    setBooks,\n  } = props;\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [category, setCategory] = useState(`${CategoriesType.Classics}`);\n  const [ISBN, setISBN] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const navigate = useNavigate();\n  const { bookID = '' } = useParams();\n\n  const isEditing = bookID.length > 0;\n\n  const canSubmit = () => {\n    if (title.trim().length <= 0) {\n      return false;\n    }\n\n    if (author.trim().length <= 0) {\n      return false;\n    }\n\n    if (ISBN.toString().trim().length <= 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleUpdateBook = (\n    bookId: number,\n    newTitle: string,\n    newAuthor: string,\n    newCategory: string,\n    newISBN: number,\n  ): void => {\n    updateBook(bookId, {\n      title: newTitle,\n      author: newAuthor,\n      category: newCategory,\n      isbn: newISBN,\n    })\n      .then(() => setBooks((prev: Book[]) => prev.map(oldBook => {\n        if (oldBook.id === bookId) {\n          return {\n            ...oldBook,\n            title: newTitle,\n            author: newAuthor,\n            category: newCategory,\n            isbn: newISBN,\n          };\n        }\n\n        return oldBook;\n      })))\n      .finally(() => setIsSubmitted(true));\n  };\n\n  const handleCreateBook = async (\n    event: FormEvent,\n    newTitle: string,\n    newAuthor: string,\n    newCategory: string,\n    newISBN: number,\n  ) => {\n    event.preventDefault();\n\n    const optimisticResponseId = -(books.length);\n    const optimisticBook = {\n      id: optimisticResponseId,\n      newTitle,\n      newAuthor,\n      newCategory,\n      newISBN,\n    };\n\n    setBooks((prev: Book[]) => [...prev, optimisticBook]);\n\n    const createdBook = await createBook({\n      title: newTitle,\n      author: newAuthor,\n      category: newCategory,\n      isbn: newISBN,\n    })\n      .finally(() => setIsSubmitted(true));\n\n    setBooks((prev: Book[]) => prev.map(book => {\n      return book.id === optimisticResponseId\n        ? createdBook\n        : book;\n    }));\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      const foundBook = books.find(book => book.id === +bookID);\n\n      if (!foundBook) {\n        return;\n      }\n\n      setTitle(foundBook.title);\n      setAuthor(foundBook.author);\n      setISBN(foundBook.isbn);\n      setCategory(foundBook.category);\n    }\n  }, []);\n\n  const ClearFields = () => {\n    setTitle('');\n    setAuthor('');\n    setCategory('');\n    setISBN(0);\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    if (isEditing) {\n      handleUpdateBook(+bookID, title, author, category, ISBN);\n    } else {\n      handleCreateBook(event, title, author, category, ISBN);\n    }\n\n    setTimeout(() => {\n      navigate('/');\n    }, 300);\n\n    ClearFields();\n  };\n\n  return (\n    <section className=\"page__section addBook\">\n      <form\n        className=\"addBook__form\"\n        onSubmit={handleSubmitForm}\n      >\n        <TextField\n          label=\"Title\"\n          value={title}\n          type=\"text\"\n          onChange={setTitle}\n          required\n        />\n\n        <TextField\n          label=\"Author\"\n          type=\"text\"\n          value={author}\n          onChange={setAuthor}\n          required\n        />\n\n        <TextField\n          label=\"ISBN\"\n          type=\"number\"\n          value={ISBN.toString()}\n          required\n          onChange={(res) => setISBN(+res)}\n        />\n\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n        <label className=\"addBook__label\" htmlFor=\"11\">\n          Category\n        </label>\n\n        <select\n          id=\"11\"\n          className=\"addBook__select\"\n          value={category}\n          onChange={(event) => setCategory(event.target.value)}\n        >\n          <option value={CategoriesType.Classics}>Classics</option>\n          <option value={CategoriesType.Horror}>Horror</option>\n          <option value={CategoriesType.DAM}>Detective / Mystery</option>\n          <option value={CategoriesType.Fantasy}>Fantasy</option>\n        </select>\n\n        <button\n          type=\"submit\"\n          className=\"addBook__button\"\n          disabled={!canSubmit()}\n        >\n          Add a Book\n        </button>\n\n        {isSubmitted && (\n          <p className=\"addBook__message\">\n            Success\n          </p>\n        )}\n      </form>\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { Dashboard } from './pages/Dashboard/Dashboard';\nimport { AddABook } from './pages/AddABook/AddABook';\nimport { getBooks } from './api/books';\nimport { Book } from './types/Book';\n\nexport const App: React.FC = () => {\n  const [books, setBooks] = useState<Book[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getBooks()\n      .then(setBooks)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <NavBar />\n\n      <div className=\"main page\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={(\n                <Dashboard\n                  books={books}\n                  setBooks={setBooks}\n                  isBooksLoading={isLoading}\n                />\n              )}\n            />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"/addABook\">\n              <Route\n                index\n                element={(\n                  <AddABook\n                    books={books}\n                    setBooks={setBooks}\n                  />\n                )}\n              />\n\n              <Route\n                path=\":bookID\"\n                element={(\n                  <AddABook\n                    books={books}\n                    setBooks={setBooks}\n                  />\n                )}\n              />\n            </Route>\n\n            <Route path=\"*\" element={<h1>Error :(</h1>} />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}